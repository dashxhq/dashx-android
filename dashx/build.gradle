import com.expediagroup.graphql.plugin.gradle.config.GraphQLSerializer

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.apollographql.apollo'
apply plugin: 'maven-publish'
apply plugin: "com.expediagroup.graphql"
apply plugin: "org.jetbrains.kotlin.plugin.serialization"

group = 'com.dashx'
version = '1.0.3'

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName version

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

        kotlinOptions {
            jvmTarget = '1.8'
        }


    compileOptions {
        coreLibraryDesugaringEnabled true
    }
}

//android.compileKotlin.configure { dependsOn("graphqlGenerateClient") }

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation "com.apollographql.apollo:apollo-runtime:$apolloVersion"
    implementation "com.apollographql.apollo:apollo-coroutines-support:$apolloVersion"
    implementation "com.apollographql.apollo:apollo-http-cache:$apolloVersion"

    // Kotlin Graphql
//    implementation "com.expediagroup:graphql-kotlin-spring-client:$latestGraphQLKotlinVersion"
    implementation "com.expediagroup:graphql-kotlin-ktor-client:$latestGraphQLKotlinVersion"
    implementation("io.ktor:ktor-client-okhttp:2.0.3")
    implementation("io.ktor:ktor-client-logging-jvm:2.0.3")
    implementation 'androidx.work:work-runtime-ktx:2.5.0'
//    implementation("com.expediagroup", "graphql-kotlin-ktor-client")
//    implementation("io.ktor:ktor-client-okhttp:$ktorVersion")
//    implementation("io.ktor:ktor-client-logging-jvm:$ktorVersion")


    compileOnly 'com.google.firebase:firebase-core:17.2.1'
    compileOnly 'com.google.firebase:firebase-messaging:20.0.1'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

//apollo {
//    // instruct the compiler to generate Kotlin models
//    generateKotlinModels.set(true)
//    customTypeMapping = [
//        'Json': 'com.google.gson.JsonElement'
//    ]
//}

graphql {
    client {
        endpoint = "https://api.dashx-staging.com/graphql"
        packageName = "com.dashx.graphql.generated"

        serializer = GraphQLSerializer.KOTLINX
    }
}

android.sourceSets {
        main.kotlin.srcDirs "build/generated/source/graphql/main"
    }

//apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"
